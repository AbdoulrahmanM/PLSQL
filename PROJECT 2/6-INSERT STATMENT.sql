/* Formatted on 10/06/2022 8:03:14 PM (QP5 v5.139.911.3011) */
DECLARE
   --DECLARING CURSOR TO CARRY CONTRACTS DATA TO CAN MANIPULATE IT
   CURSOR CONTRACTS_DATA
   IS
      SELECT * FROM CONTRACTS;

   LOOP_COUNTER           NUMBER;
   V_REST_CONTRACT        NUMBER;
   V_INSTALLMENT_AMOUNT   NUMBER;
   V_PAYMENT_DATE         DATE;
   v_CONTRACT_TYPE       CONTRACTS.CONTRACT_PAYMENT_TYPE%TYPE;
BEGIN
   --TO LOOP ON THE CONTRACTS
   FOR CONTRACT_REC IN CONTRACTS_DATA
   LOOP
   
      --ASSIGN THE START DATE TO A VARIABLE TO CALCULATE THE NEXT PAYMENT DATE
      V_PAYMENT_DATE := CONTRACT_REC.CONTRACT_STARTDATE;
      v_CONTRACT_TYPE:=CONTRACT_REC.CONTRACT_PAYMENT_TYPE;
      LOOP_COUNTER := 1;
      
      --TO LOOP ON THE THE NUMBER OF INSTALLMENTS FOR INSERTING THE INSTALLMENT NUMBERS
      WHILE LOOP_COUNTER <= CONTRACT_REC.PAYMENTS_INSTALLMENTS_NO
      LOOP
      
         --CALCULATE THE REST OF THE MONEY SHOULD BE PAID TO CALCULATE THE INSTALLEMNT AMOUT
         V_REST_CONTRACT :=
            CONTRACT_REC.CONTRACT_TOTAL_FEES
            - nvl(CONTRACT_REC.CONTRACT_DEPOSIT_FEES,0);

         --CALCULATE THE EXACT VALUE TO BE ADDED TO THE INSTALLEMNT AMOUNT SHOULD BE PAID EVERY TIME
         V_INSTALLMENT_AMOUNT :=
            ROUND (V_REST_CONTRACT / CONTRACT_REC.PAYMENTS_INSTALLMENTS_NO,
                   2);
            INSERT INTO INSTALLMENTS_PAID (CONTRACT_ID,
                                        INSTALLMENT_DATE,
                                        INSTALLMENT_AMOUNT)
              VALUES (
                      CONTRACT_REC.CONTRACT_ID,
                      V_PAYMENT_DATE,
                      V_INSTALLMENT_AMOUNT);
       V_PAYMENT_DATE:=fun_add_months(V_PAYMENT_DATE,v_CONTRACT_TYPE);
         LOOP_COUNTER := LOOP_COUNTER + 1;
      END LOOP;
   END LOOP;
END;

show errors;